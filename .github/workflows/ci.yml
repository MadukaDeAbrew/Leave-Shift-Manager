name: Backend CI

on:
  push:
    branches: [main]              # push to main to trigger
  pull_request:
    branches: [main]
  workflow_dispatch:              # lets you click "Run workflow" in the UI

jobs:
  test:
    name: Run Backend Tests
    runs-on: [self-hosted, Linux, X64]   # matches your runner labels
    # environment: MONGO_URI             # optional: only if you really use a GH Environment

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      # Write .env from your single multiline secret "PROD"
      - name: Write backend .env from PROD secret
        working-directory: ./backend
        shell: bash
        run: |
          cat > .env <<'ENV'
          ${{ secrets.PROD }}
          ENV

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run backend tests
        working-directory: ./backend
        env:
          # These envs are available to node at runtime; your .env is already written above.
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: npm test

      # OPTIONAL deploy step (only if this runner hosts your live app)
      # - name: Deploy (PM2 restart)
      #   if: ${{ success() && github.ref == 'refs/heads/main' }}
      #   run: |
      #     npm i -g pm2 >/dev/null 2>&1 || true
      #     pm2 restart backend || pm2 start ./backend/server.js --name backend
      #     pm2 save
