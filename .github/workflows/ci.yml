name: Backend CI

on:
  push:
    branches:
      - main   # Trigger CI/CD on pushes to main branch
  workflow_dispatch: {}   # Allow manual trigger from GitHub UI

jobs:
  test:
    name: Run Tests and Deploy
    runs-on: self-hosted   # Using EC2 GitHub runner
    strategy:
      matrix:
        node-version: [22]   # Node.js version

    steps:
    # 1. Checkout repo
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # 3. Print secrets (sanity check â€“ values are masked)
    - name: Print Env Secret
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: |
        echo "Secret 1 is: $MONGO_URI"
        echo "Secret 2 is: $JWT_SECRET"
        echo "Secret 3 is: $PORT"

    # 4. Stop PM2 processes (safe)
    - run: pm2 stop all || true

    # 5. Install backend deps
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: yarn install --frozen-lockfile

    # 6. Install frontend deps + build
    - name: Install Frontend Dependencies & Build
      working-directory: ./frontend
      run: |
        df -h   # print disk usage
        sudo rm -rf ./build
        yarn install --frozen-lockfile
        yarn run build

    # 7. Run backend tests
    - name: Run Backend Tests
      working-directory: ./backend
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: yarn test

    # 8. Create .env file for deployment
    - name: Setup .env for backend
      run: |
        cd ./backend
        touch .env
        echo "${{ secrets.PROD }}" > .env

    # 9. Restart app with PM2
    - run: pm2 start all
    - run: pm2 restart all
