name: Backend CI

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch
  workflow_dispatch: {} # Allow manual trigger from GitHub UI

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22] # Node.js version

    environment: MONGO_URI

    steps:
    # 1. Checkout repo
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # 3. Print secrets (sanity check, masked in logs)
    - name: Print Env Secret
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: | 
        echo "Secret 1 is: $MONGO_URI"
        echo "Secret 2 is: $JWT_SECRET"
        echo "Secret 3 is: $PORT"
      
    # 4. Stop PM2 processes (avoid crash on redeploy)
    - run: pm2 stop all || true

    # 5. Install dependencies for backend
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: | 
        npm install --global yarn
        yarn --version
        yarn install --frozen-lockfile
      
    # 6. Install dependencies for frontend & build
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        df -h
        sudo rm -rf ./build
        yarn install --frozen-lockfile
        yarn run build

    # 7. Run backend tests
    - name: Run Backend Tests
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      working-directory: ./backend
      run: npm test

    # 8. Ensure clean install for prod deploy
    - run: npm ci

    # 9. Create .env file for backend
    - run: | 
        cd ./backend
        touch .env
        echo "${{ secrets.PROD }}" > .env

    # 10. Restart app with PM2
    - run: pm2 start all
    - run: pm2 restart all
